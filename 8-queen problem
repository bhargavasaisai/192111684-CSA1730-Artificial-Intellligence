def is_safe(board, row, col):
    for i in range(col):
        if board[row][i] == 1:
            return False
        
    for i, j in zip(range(row, -1, -1), range(col, -1, -1)):
        if board[i][j] == 1:
            return False
        
    for i, j in zip(range(row, 8, 1), range(col, -1, -1)):
        if board[i][j] == 1:
            return False
        
    return True

def solve_8queens_util(board, col):
    if col >= 8:
        return True
    for i in range(8):
        if is_safe(board, i, col):
            board[i][col] = 1
            if solve_8queens_util(board, col + 1):
                return True
            board[i][col] = 0
    
    return False

def solve_8queens():
    board = [[0] * 8 for _ in range(8)]
    if solve_8queens_util(board, 0) == False:
        return "No solution exists"
    return board

print(solve_8queens())
