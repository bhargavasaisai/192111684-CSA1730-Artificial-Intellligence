from collections import deque

def print_board(board):
    for i in range(3):
        for j in range(3):
            print(board[i][j], end=" ")
        print()

def bfs_8Puzzle(initial_state, goal_state):
    queue = deque()
    queue.append((initial_state, []))  # Store the state and the path taken to reach this state
    visited = set(tuple(map(tuple, initial_state)))
    moves = [(1, 0), (-1, 0), (0, 1), (0, -1)]
    while queue:
        current, path = queue.popleft()
        if current == goal_state:
            return len(path), path
        for move in moves:
            new_state = list(map(list, current))
            zero_pos = [(i, j) for i in range(3) for j in range(3) if new_state[i][j] == 0][0]
            new_pos = (zero_pos[0] + move[0], zero_pos[1] + move[1])
            if 0 <= new_pos[0] < 3 and 0 <= new_pos[1] < 3:
                new_state[zero_pos[0]][zero_pos[1]], new_state[new_pos[0]][new_pos[1]] = new_state[new_pos[0]][new_pos[1]], new_state[zero_pos[0]][zero_pos[1]]
                if tuple(map(tuple, new_state)) not in visited:
                    queue.append((new_state, path + [new_state]))
                    visited.add(tuple(map(tuple, new_state)))
    return -1, []  # If goal state not found

def input_state(prompt):
    while True:
        print(prompt)
        state = []
        for i in range(3):
            row = list(map(int, input().split()))
            if len(row) != 3:
                print("Please enter 3 values for each row.")
                break
            state.append(row)
        if len(state) == 3:
            return state
        else:
            print("Invalid input. Please provide a 3x3 matrix.\n")

initial_state = input_state("Enter the initial state (3x3 matrix) for 8-Puzzle:")
goal_state = input_state("Enter the goal state (3x3 matrix) for 8-Puzzle:")

steps, path = bfs_8Puzzle(initial_state, goal_state)
if steps != -1:
    print("Goal Found in", steps, "steps!")
    print("Steps to reach the goal:")
    for state in path:
        print_board(state)
        print()
else:
    print("Goal Not Found!")
